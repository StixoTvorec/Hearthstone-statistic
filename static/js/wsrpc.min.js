(function(g){g.WSRPC=function(n,p){function q(c){setTimeout(function(){try{a.socket=l(),a.serial=1}catch(b){c("onerror",b),delete a.socket,d(b)}},p||1E3)}function l(c){function b(c,h){for(;0<a.oneTimeEventStore[c].length;){var b=a.oneTimeEventStore[c].shift();b.hasOwnProperty("resolve")&&b.promise.isPending()&&b.resolve()}for(var e in a.eventStore[c]){b=a.eventStore[c][e];try{b(h)}catch(f){f.hasOwnProperty("stack")?d(f.stack):d("Event function "+b+" raised unknown error: "+f)}}}var e=new WebSocket(n),
f=function(){for(a.connectionNumber++;0<a.callQueue.length;){var c=a.callQueue.shift(),b=a.store[c.serial];delete a.store[c.serial];b&&b.promise.isPending()&&b.reject("WebSocket error occurred")}};e.onclose=function(r){d("WSRPC: ONCLOSE CALLED (STATE: "+a["public"].state()+")");k(r);for(var h in a.store)a.store[h].hasOwnProperty("reject")&&a.store[h].promise.isPending()&&a.store[h].reject("Connection closed");f();b("onclose",c);b("onchange",c);q(b)};e.onerror=function(c){d("WSRPC: ONERROR CALLED (STATE: "+
a["public"].state()+")");k(c);f();b("onerror",c);b("onchange",c);d(["WebSocket has been closed by error: ",c])};e.onopen=function(c){d("WSRPC: ONOPEN CALLED (STATE: "+a["public"].state()+")");for(k(c);0<a.callQueue.length;)a.socket.send(JSON.stringify(a.callQueue.shift(),0,1));b("onconnect",c);b("onchange",c)};e.onmessage=function(c){d("WSRPC: ONMESSAGE CALLED ("+a["public"].state()+")");k(c);var b=null;if("message"==c.type)try{if(b=JSON.parse(c.data),d(b.data),b.hasOwnProperty("type")&&"call"===
b.type){if(!a.routes.hasOwnProperty(b.call))throw Error("Route not found");var f=a.connectionNumber;Q(a.routes[b.call](b.arguments)).then(function(c){f==a.connectionNumber&&a.socket.send(JSON.stringify({serial:b.serial,type:"callback",data:c}))}).done()}else if(b.hasOwnProperty("type")&&"error"===b.type){if(!a.store.hasOwnProperty(b.serial))return d("Unknown callback");var e=a.store[b.serial];if("undefined"===typeof e)return d("Confirmation without handler");delete a.store[b.serial];d("REJECTING: "+
b.data);e.reject(b.data)}else{e=a.store[b.serial];if("undefined"===typeof e)return d("Confirmation without handler");delete a.store[b.serial];return"callback"===b.type?e.resolve(b.data):e.reject(b.data)}}catch(g){a.socket.send(JSON.stringify({data:g.message,type:"error",serial:b?b.serial:null})),d(g.stack)}};return e}var a=this;a.serial=1;a.eventId=0;a.socketStarted=!1;a.eventStore={onconnect:{},onerror:{},onclose:{},onchange:{}};a.connectionNumber=0;a.oneTimeEventStore={onconnect:[],onerror:[],onclose:[],
onchange:[]};a.callQueue=[];var d=function(a){g.WSRPC.DEBUG&&("group"in console&&"groupEnd"in console?(console.group("WSRPC.DEBUG"),console.debug(a),console.groupEnd()):console.debug(a))},k=function(a){g.WSRPC.TRACE&&("group"in console&&"groupEnd"in console&&"dir"in console?(console.group("WSRPC.TRACE"),"data"in a?console.dir(JSON.parse(a.data)):console.dir(a),console.groupEnd()):"data"in a?console.log("OBJECT DUMP: "+a.data):console.log("OBJECT DUMP: "+a))},m={0:"CONNECTING",1:"OPEN",2:"CLOSING",
3:"CLOSED"};a.routes={};a.store={};a["public"]={call:function(c,b,e){a.serial+=2;var f=Q.defer();c={serial:a.serial,call:c,arguments:b};b=a["public"].state();"OPEN"===b?(a.store[a.serial]=f,a.socket.send(JSON.stringify(c))):"CONNECTING"===b?(d("SOCKET IS: "+b),a.store[a.serial]=f,a.callQueue.push(c)):(d("SOCKET IS: "+b),e&&e.noWait?f.reject("Socket is: "+b):(a.store[a.serial]=f,a.callQueue.push(c)));return f.promise},init:function(){d("Websocket initializing..")},addRoute:function(c,b){a.routes[c]=
b},addEventListener:function(c,b){return a.eventStore[c][a.eventId++]=b},onEvent:function(c){var b=Q.defer();a.oneTimeEventStore[c].push(b);return b.promise},removeEventListener:function(c,b){return b<a.eventStore[c].length?(a.eventStore[c].splice(b,1),!0):!1},deleteRoute:function(c){return delete a.routes[c]},destroy:function(){function c(){}a.socket.onclose=c;a.socket.onerror=c;return a.socket.close()},state:function(){return a.socketStarted&&a.socket?m[a.socket.readyState]:m[3]},connect:function(){a.socketStarted=
!0;a.socket=l()}};a["public"].addRoute("log",function(a){console.info("Websocket sent: "+a)});a["public"].addRoute("ping",function(a){return a});return a["public"]};g.WSRPC.DEBUG=!1;g.WSRPC.TRACE=!1})(this);